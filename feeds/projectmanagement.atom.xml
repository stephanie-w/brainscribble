<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Brain Scribble</title><link href="http://stephanie-w.github.io/brainscribble/" rel="alternate"></link><link href="http://stephanie-w.github.io/brainscribble/feeds/projectmanagement.atom.xml" rel="self"></link><id>http://stephanie-w.github.io/brainscribble/</id><updated>2015-07-02T00:00:00+02:00</updated><entry><title>Kanban Practices</title><link href="http://stephanie-w.github.io/brainscribble/kanban.html" rel="alternate"></link><updated>2015-07-02T00:00:00+02:00</updated><author><name>Stephanie W</name></author><id>tag:stephanie-w.github.io,2015-07-02:brainscribble/kanban.html</id><summary type="html">
&lt;hr/&gt;
&lt;!-- BEGIN_SUMMARY --&gt;
&lt;p&gt;Kanban in the context of software development mean a visual process-management system that tells what to produce, when to produce it, and how much to produce - inspired by the Toyota Production System and by Lean manufacturing.&lt;/p&gt;
&lt;!-- END_SUMMARY --&gt;
&lt;p&gt;A Kanban board must be visual, tactile, collaborative.  &lt;/p&gt;
&lt;h2 id="kanban-composants"&gt;Kanban Composants&lt;/h2&gt;
&lt;p&gt;The Kanban composants are ...&lt;/p&gt;&lt;/!--&gt;&lt;/!--&gt;&lt;/hr/&gt;</summary></entry><entry><title>Git Workflows vs "All to Master"</title><link href="http://stephanie-w.github.io/brainscribble/git-workflows.html" rel="alternate"></link><updated>2015-06-20T00:00:00+02:00</updated><author><name>Stephanie W</name></author><id>tag:stephanie-w.github.io,2015-06-20:brainscribble/git-workflows.html</id><summary type="html">&lt;hr /&gt;
&lt;p&gt;A basic git workflow is the feature branch workflow. All feature (or task, or story) developments are taken place in a dedicated branch (the feature branch).&lt;br /&gt;
The stories/features branch exist as long as the feature is in development.&lt;br /&gt;
At the end of the development, the branch is usually submitted ...&lt;/p&gt;</summary></entry><entry><title>The priority pyramid</title><link href="http://stephanie-w.github.io/brainscribble/priority-pyramid.html" rel="alternate"></link><updated>2015-06-13T00:00:00+02:00</updated><author><name>Stephanie W</name></author><id>tag:stephanie-w.github.io,2015-06-13:brainscribble/priority-pyramid.html</id><summary type="html">&lt;p&gt;The priority pyramid is a visualized backlog with a prioritization process.&lt;/p&gt;</summary></entry><entry><title>Gantt Chart Principle</title><link href="http://stephanie-w.github.io/brainscribble/gantt-chart-principle.html" rel="alternate"></link><updated>2015-06-12T00:00:00+02:00</updated><author><name>Stephanie W</name></author><id>tag:stephanie-w.github.io,2015-06-12:brainscribble/gantt-chart-principle.html</id><summary type="html">&lt;p&gt;A Gantt Chart illustrates a project schedule by presenting scheduling and dependencies information about the activities involved in implementing a project.&lt;/p&gt;</summary></entry><entry><title>User stories</title><link href="http://stephanie-w.github.io/brainscribble/user-stories.html" rel="alternate"></link><updated>2015-06-02T00:00:00+02:00</updated><author><name>Stephanie W</name></author><id>tag:stephanie-w.github.io,2015-06-02:brainscribble/user-stories.html</id><summary type="html">&lt;hr /&gt;
&lt;!-- BEGIN_SUMMARY --&gt;

&lt;p&gt;A user story is a tool used in Agile software development to capture a description of a software feature from an end-user perspective. The user story describes the type of user, what they want and why. A user story helps to create a simplified description of a requirement.&lt;/p&gt;
&lt;!-- END_SUMMARY --&gt;

&lt;p&gt;A user ...&lt;/p&gt;&lt;/!--&gt;&lt;/!--&gt;</summary></entry></feed>